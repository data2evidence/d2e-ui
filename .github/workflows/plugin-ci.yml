name: build plugin

on:
  workflow_dispatch:
    inputs:
        GIT_REPO_FULL_NAME:
          description: Select RepoName
          required: false
          type: choice
          options:
            - data2evidence/d2e-ui
        GIT_BRANCH_NAME:
          default: develop
          description: Enter BranchName / ReleaseTagName
          required: true
          type: string
        tag:
          description: Enter tag for release
          required: true
          type: string
        release:
          description: Enter name for github release
          required: true
          type: string
        prerelease:
          type: boolean
          default: true
          required: true
        overwrite:
          type: boolean
          default: false
          required: true
  pull_request:
    types: [opened, ready_for_review, reopened, synchronize]
  push:
    branches:
      - develop

env:
  GIT_BRANCH_NAME: ${{ github.event.inputs.GIT_BRANCH_NAME || github.head_ref || github.ref_name }} # workflow_dispatch || pull_request || push
  GIT_REPO_FULL_NAME: ${{ github.event.inputs.GIT_REPO_FULL_NAME || github.event.pull_request.head.repo.full_name || github.event.repository.full_name }} # workflow_dispatch || pull_request || push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.GIT_BRANCH_NAME }}
          repository: ${{ env.GIT_REPO_FULL_NAME }}
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY_NOTEBOOK_BASE }}
            ${{ secrets.SSH_PRIVATE_KEY_STARBOARD_WRAP }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://pkgs.dev.azure.com/data2evidence/d2e/_packaging/d2e/npm/registry/"
          scope: "@data2evidence"
      - name: Setup yarn
        run: npm install -g yarn
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install Homebrew
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl file git
          bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

          echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.bashrc
          echo 'export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"' >> ~/.bashrc
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
      - name: Build
        run: yarn
        env:
          CI: false
      - name: Patch Package
        run: jq '.private=false' package.json > tmppkg; mv tmppkg package.json
      - name: Update version
        run: |
          if [[ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]]; then
            RELEASE_VERSION=${{ github.event.inputs.tag }}
            jq --arg v $RELEASE_VERSION '.version=$v' package.json > tmppkg; mv tmppkg package.json
          else
            jq --arg v "-$(date +%s)-$GITHUB_SHA" '.version+=$v' package.json > tmppkg; mv tmppkg package.json
          fi
      - name: Publish
        env:
          CI: false # For portal build to ignore warnings and not treat them as errors
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          SHOULD_PUBLISH: ${{ github.ref_name == 'develop' || github.event_name == 'workflow_dispatch' }}
        run: |
          echo "Ensuring Homebrew environment is available..."
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew --version
          if [[ $SHOULD_PUBLISH == true ]]; then
              yarn publish
          else 
              yarn pack
          fi

