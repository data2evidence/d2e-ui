name: build plugin

on:
  workflow_dispatch:
  pull_request:
    types: [opened, ready_for_review, reopened, synchronize]
  push:
    branches:
      - develop

env:
  GIT_CI_BRANCH_NAME: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY_NOTEBOOK_BASE }}
            ${{ secrets.SSH_PRIVATE_KEY_STARBOARD_WRAP }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@alp-os"
      - name: Setup yarn
        run: npm install -g yarn
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install Homebrew
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl file git
          bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

          echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.bashrc
          echo 'export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"' >> ~/.bashrc
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
      - name: Build
        run: yarn
        env:
          CI: false
      - name: Patch Package
        run: jq '.private=false' package.json > tmppkg; mv tmppkg package.json
      - name: Update version
        run: jq --arg v "-$(date +%s)-$GITHUB_SHA" '.version+=$v' package.json > tmppkg; mv tmppkg package.json
      - name: Publish
        run: |
          echo "Ensuring Homebrew environment is available..."
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

          brew --version

          if [[ $GIT_CI_BRANCH_NAME == 'develop' ]]; then 
              yarn publish
          else 
              npm publish --dry-run
          fi
        env:
          CI: false # For portal build to ignore warnings and not treat them as errors
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/delete-package-versions@v5
        with:
          package-name: "d2e-ui"
          package-type: "npm"
          min-versions-to-keep: 3
          delete-only-pre-release-versions: "true"

      - name: Pack
        run: |
          if [[ $GIT_CI_BRANCH_NAME == 'develop' ]]; then
            NPM_FILENAME=$(npm pack)
            echo "NPM_FILENAME=$NPM_FILENAME" >> $GITHUB_ENV
          fi
      - name: Push
        uses: svenstaro/upload-release-action@v2
        if: ${{ env.GIT_CI_BRANCH_NAME == 'develop' }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.NPM_FILENAME }}
          tag: latest
          target_commit: develop
          prerelease: true
          overwrite: true
          asset_name: d2e-ui.tgz
